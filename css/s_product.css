.product-details {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    gap: 2rem;
    margin-block: 2em;
}

.product-img {
    width: 80%;
    max-height: 400px; 
    object-fit: cover; 
    border-radius: 10px;
}

.product-summary {
    max-width: 700px; 
}

.product-category {
    color: #333;
}

.product-name {
    font-size: 1.8rem;
    margin-block: .1em;
    font-weight: 700;
}

.price {
    font-size: 1.2rem;
    font-weight: 500;
    margin-bottom: .6em;
}


.actions {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
    margin: 10px 0;
}

.continue-shopping {
    margin-block: 2em;
}

/* Styling the quantity selector */
.quantity-selector {
    display: flex;
    align-items: center;
    border: 1px solid #247ba0;
    border-radius: 6px;
    padding: 0.1em 0.3em;
    background-color: #f9f9f9;
}

/* Styling the quantity buttons */
.quantity-btn {
    background-color: #247ba0;
    color: #fff;
    border: none;
    padding: 0 0.4em;
    font-size: 1rem; 
    cursor: pointer;
    border-radius: 4px;
    transition: background-color 0.3s ease;
}

.quantity-btn:hover {
    background-color: #1a5e79; /* Darker shade on hover */
}

/* Styling the quantity display */
#quantity-display {
    width: 2em;
    text-align: center;
    font-size: 1.2rem;
    margin: 0 0.2em;
    color: #000;
}

#add-to-cart-button {
    border-radius: 5px;
    margin-block-end: .2rem;
    padding: .4em 1.5em; 
    font-size: 1.3rem;
    background-color: var(--neutral--color-400); 
    text-shadow: 2px 2px 4px #000000;
    color: #fff;
    border: none; 
    border-left: none; 
    cursor: pointer;
    transition: background-color 0.3s ease;
}


.description {
    margin-top: 2em;
}

.description .fa {
    margin-left: .5em;
    font-size: 1.2rem;
    color: #333;
}

.description h2 {
    font-size: 1.5rem;
    margin-bottom: .4em;
}

.description p {
    font-size: 1.15rem;
}



.related-products-container {
    max-width: 78%;
    margin: 0 auto;
    padding: 1rem;
}

.related-products-title  {
    font-size: 2rem;
    margin-bottom: 2rem;
}   

.related-products-grid {
    display: grid;
    gap: 0.5rem;
    grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
}


/* .related-product-img {
    width: 100%;
    aspect-ratio: 1 / 1;
    object-fit: cover;
} */

@media(max-width: 35em) {
    .product-details {
        flex-direction: column;
    }

    .product-img {
        width: 100%;
    }
}

/* The only problem with this randomization approach is that everytime a user loads the page the order changes, even in the slightest like going to the next page, the order changes too much, isn't there a way that we can sort of have a fixed order maybe trhough math functions, a logic that won't change the order every time a user loads the page to bring some 'stillness' to the current order state */